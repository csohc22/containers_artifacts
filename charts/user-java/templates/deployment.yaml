apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "user-java.fullname" . }}
  labels:
    {{- include "user-java.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "user-java.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "user-java.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "user-java.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "{{ .Values.probes.livenessProbe.path }}"
              port: "{{ .Values.probes.livenessProbe.port }}"
          readinessProbe:
            httpGet:
              path: "{{ .Values.probes.readinessProbe.path }}"   
              port: "{{ .Values.probes.livenessProbe.port }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- with .Values.env }}
            {{- range $k, $v := . }}
            - name: {{ quote $k }}
              value: {{ quote $v }}
            {{- end }}
            {{- end }}
            - name: SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keyvault
                  key: sqlpassword
          volumeMounts:
            - name: secrets-store
              mountPath: /mnt/secrets-store
              readOnly: true
      volumes:
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: azure-kv-{{ .Chart.Name }}-csi
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
